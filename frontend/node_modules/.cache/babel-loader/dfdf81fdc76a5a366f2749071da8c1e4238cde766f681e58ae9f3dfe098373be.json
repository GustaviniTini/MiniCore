{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiniCore\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport api from './api';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskFilter from './components/TaskFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tareas, setTareas] = useState([]);\n  const borrarEmpleados = async () => {\n    try {\n      await api.delete('/empleados/all');\n      alert('Todos los empleados han sido borrados');\n    } catch (err) {\n      console.error(\"Error al borrar empleados:\", err);\n    }\n  };\n  const borrarProyectos = async () => {\n    try {\n      await api.delete('/proyectos/all');\n      alert('Todos los proyectos han sido borrados');\n    } catch (err) {\n      console.error(\"Error al borrar proyectos:\", err);\n    }\n  };\n  const borrarTareas = async () => {\n    try {\n      await api.delete('/tareas/all');\n      alert('Todas las tareas han sido borradas');\n      setTareas([]); // Limpiar la lista de tareas en el frontend\n    } catch (err) {\n      console.error(\"Error al borrar tareas:\", err);\n    }\n  };\n  const borrarTodo = async () => {\n    await borrarEmpleados();\n    await borrarProyectos();\n    await borrarTareas();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: borrarTodo,\n      children: \"Borrar Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: borrarEmpleados,\n      children: \"Borrar Empleados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: borrarProyectos,\n      children: \"Borrar Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: borrarTareas,\n      children: \"Borrar Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n      setTareas: setTareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tareas: tareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qEPh+FJX576aOe1wcgToovFk070=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","api","TaskList","TaskForm","TaskFilter","useState","jsxDEV","_jsxDEV","App","_s","tareas","setTareas","borrarEmpleados","delete","alert","err","console","error","borrarProyectos","borrarTareas","borrarTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MiniCore/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport api from './api';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskFilter from './components/TaskFilter';\nimport { useState } from 'react';\n\nfunction App() {\n  const [tareas, setTareas] = useState([]);\n\n  const borrarEmpleados = async () => {\n    try {\n      await api.delete('/empleados/all');\n      alert('Todos los empleados han sido borrados');\n    } catch (err) {\n      console.error(\"Error al borrar empleados:\", err);\n    }\n  };\n\n  const borrarProyectos = async () => {\n    try {\n      await api.delete('/proyectos/all');\n      alert('Todos los proyectos han sido borrados');\n    } catch (err) {\n      console.error(\"Error al borrar proyectos:\", err);\n    }\n  };\n\n  const borrarTareas = async () => {\n    try {\n      await api.delete('/tareas/all');\n      alert('Todas las tareas han sido borradas');\n      setTareas([]); // Limpiar la lista de tareas en el frontend\n    } catch (err) {\n      console.error(\"Error al borrar tareas:\", err);\n    }\n  };\n\n  const borrarTodo = async () => {\n    await borrarEmpleados();\n    await borrarProyectos();\n    await borrarTareas();\n  };\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      <button onClick={borrarTodo}>Borrar Todo</button>\n      <button onClick={borrarEmpleados}>Borrar Empleados</button>\n      <button onClick={borrarProyectos}>Borrar Proyectos</button>\n      <button onClick={borrarTareas}>Borrar Tareas</button>\n      <TaskForm />\n      <TaskFilter setTareas={setTareas} />\n      <TaskList tareas={tareas} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMX,GAAG,CAACY,MAAM,CAAC,gBAAgB,CAAC;MAClCC,KAAK,CAAC,uCAAuC,CAAC;IAChD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMjB,GAAG,CAACY,MAAM,CAAC,gBAAgB,CAAC;MAClCC,KAAK,CAAC,uCAAuC,CAAC;IAChD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMlB,GAAG,CAACY,MAAM,CAAC,aAAa,CAAC;MAC/BC,KAAK,CAAC,oCAAoC,CAAC;MAC3CH,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMR,eAAe,CAAC,CAAC;IACvB,MAAMM,eAAe,CAAC,CAAC;IACvB,MAAMC,YAAY,CAAC,CAAC;EACtB,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAQmB,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDlB,OAAA;MAAQmB,OAAO,EAAEd,eAAgB;MAAAS,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DlB,OAAA;MAAQmB,OAAO,EAAER,eAAgB;MAAAG,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DlB,OAAA;MAAQmB,OAAO,EAAEP,YAAa;MAAAE,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDlB,OAAA,CAACJ,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZlB,OAAA,CAACH,UAAU;MAACO,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpClB,OAAA,CAACL,QAAQ;MAACQ,MAAM,EAAEA;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAChB,EAAA,CAjDQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}